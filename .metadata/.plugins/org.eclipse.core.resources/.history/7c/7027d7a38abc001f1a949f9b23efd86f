package com.employee.controller;

import static org.mockito.ArgumentMatchers.any;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;

import com.employee.entity.Employee;
import com.employee.service.EmployeeService;

@ExtendWith(MockitoExtension.class)
class EmployeeControllerTest {
	@Mock
	EmployeeService employeeService;
	
	@InjectMocks
	EmployeeController controller;
	
	static Employee e;
	static List<Employee> list;
	
	@BeforeAll
	static void init() {
		e = new Employee(123, "bcd",23400, "dev");
		list = new ArrayList<Employee>();
	}
	@BeforeEach
	 void init1() {
		list.add(e);
	}

	@Test
	void testSaveEmployee() {
		Mockito.when(employeeService.saveEmployee(any(Employee.class))).thenReturn(e);
		ResponseEntity<Employee> res = controller.saveEmployee(e);
		Assertions.assertEquals(HttpStatus.CREATED, res.getStatusCode());
		Assertions.assertEquals(e.getId(),res.getBody().getId());
	}

	@Test
	void testGetAllEmployee() {
		Mockito.when(employeeService.getAllEmployee()).thenReturn(list);
		List<Employee> result =controller.getAllEmployee();
		Assertions.assertEquals(list.size(),result.size());
		
	}

	@Test
	void testEmpBySort() {
		Mockito.when(employeeService.getEmployeeBySorting()).thenReturn(list);
		List<Employee> result =controller.empBySort();
		Assertions.assertEquals(list.size(),result.size());
	}

	@Test
	void testFindById() {
		Mockito.when(employeeService.findById(1)).thenReturn(e);
		ResponseEntity<Employee> response=controller.findById(1);
		Assertions.assertEquals(HttpStatus.FOUND, response.getStatusCode());
		Assertions.assertEquals(e.getId(),response.getBody().getId());
	}

//	@Test
//	void testDeleteById() {
//		
//	}

	@Test
	void testFindByDesgn() {
		Mockito.when(employeeService.findByDesgn("dev")).thenReturn(list);
		ResponseEntity<List<Employee>> result =controller.findByDesgn("dev");
		Assertions.assertEquals(HttpStatus.FOUND, result.getStatusCode());
		  Assertions.assertEquals(e.getDesignation(), result.getStatusCode());
	}

}
